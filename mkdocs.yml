# Project information
site_name: Computer Science Notes
site_description: Computer Science Notes, Operating System, Machine Learning, Parallel and Concurrent Programming with C++
site_author: Jay Chen
site_url: https://walkccc.github.io/CS

# Repository
repo_name: walkccc/CS
repo_url: https://github.com/walkccc/CS

# Copyright
copyright: Built by <a href="http://github.com/walkccc">Jay Chen</a> &copy; 2017 - 2020

# Configuration
theme:
  name: material
  language: en
  custom_dir: custom/
  favicon: assets/favicon.png
  palette:
    primary: indigo
    accent: blue
  font:
    text: Roboto
    code: Roboto Mono
  icon:
    logo: material/console
    repo: fontawesome/brands/github
  features:
    - tabs

# Customization
extra:
  social:
    - icon: fontawesome/brands/github-square
      link: https://github.com/walkccc
    - icon: fontawesome/brands/linkedin
      link: https://www.linkedin.com/in/walkccc/
    - icon: fontawesome/solid/code
      link: https://walkccc.github.io/LeetCode

extra_css:
  - css/katex.css
  - css/custom.css
  - https://cdn.jsdelivr.net/npm/katex@0.12.0/dist/katex.min.css

extra_javascript:
  - js/katex.js
  - https://cdn.jsdelivr.net/npm/katex@0.12.0/dist/katex.min.js
  - https://cdn.jsdelivr.net/npm/katex@0.12.0/dist/contrib/auto-render.min.js

# Extensions
markdown_extensions:
  - pymdownx.highlight:
      linenums: true
      linenums_style: pymdownx.table
  - pymdownx.superfences
  - pymdownx.tabbed
  - admonition
  - toc:
      permalink: true

nav:
  - Preface: index.md
  - JavaScript DSA:
      - Preface: JavaScript/index.md
      - 01 - Problem Solving Patterns:
          - Frequency Counters: JavaScript/01/frequencyCounters.md
          - Multiple Pointers: JavaScript/01/multiplePointers.md
          - Sliding Window: JavaScript/01/slidingWindow.md
          - Divide and Conquer: JavaScript/01/divideAndConquer.md
      - 02 - Recursion Problem Set:
          - Recursion Problem Set (easy): JavaScript/02/recursionEasy.md
          - Recursion Problem Set (hard): JavaScript/02/recursionHard.md
      - 03 - Sorting Algorithms:
          - Bubble Sort: JavaScript/03/bubbleSort.md
          - Selection Sort: JavaScript/03/selectionSort.md
          - Insertion Sort: JavaScript/03/insertionSort.md
          - Merge Sort: JavaScript/03/mergeSort.md
          - Quick Sort: JavaScript/03/quickSort.md
      - 04 - Data Structures:
          - Singly Linked List: JavaScript/04/SinglyLinkedList.md
          - Doubly Linked List: JavaScript/04/DoublyLinkedList.md
          - Binary Search Tree: JavaScript/04/BinarySearchTree.md
          - Max Binary Heap: JavaScript/04/MaxBinaryHeap.md
          - Max Priority Queue: JavaScript/04/MaxPriorityQueue.md
      - 05 - Graphs:
          - Graph: JavaScript/05/Graph.md
          - Dijkstra Algorithm: JavaScript/05/Dijkstra.md
